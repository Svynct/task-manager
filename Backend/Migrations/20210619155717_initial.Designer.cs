// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using TaskManager_WebAPI.Data;

namespace TaskManager_WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210619155717_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("TaskManager_WebAPI.Models.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Concluida")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UsuarioTarefaTarefaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UsuarioTarefaUsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioTarefaUsuarioId", "UsuarioTarefaTarefaId");

                    b.ToTable("Tarefas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Concluida = false,
                            Nome = "Reunião com Gestor"
                        },
                        new
                        {
                            Id = 2,
                            Concluida = false,
                            Nome = "Ligar para Prestutor de Serviço"
                        },
                        new
                        {
                            Id = 3,
                            Concluida = false,
                            Nome = "Responder email do Cliente"
                        },
                        new
                        {
                            Id = 4,
                            Concluida = false,
                            Nome = "Ler comunicuto da Empresa"
                        },
                        new
                        {
                            Id = 5,
                            Concluida = false,
                            Nome = "Realizar Inventário"
                        });
                });

            modelBuilder.Entity("TaskManager_WebAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Permissao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "utmin@utmin.com",
                            Nome = "utmin",
                            Permissao = "UTministrutor",
                            Senha = "utmin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "carlos@gmail.com",
                            Nome = "Carlos",
                            Permissao = "Usuário",
                            Senha = "123456"
                        },
                        new
                        {
                            Id = 3,
                            Email = "sergio@gmail.com",
                            Nome = "Sérgio",
                            Permissao = "Usuário",
                            Senha = "sergio@40"
                        },
                        new
                        {
                            Id = 4,
                            Email = "jose@gmail.com",
                            Nome = "José",
                            Permissao = "Usuário",
                            Senha = "j123456"
                        },
                        new
                        {
                            Id = 5,
                            Email = "maria@gmail.com",
                            Nome = "Maria",
                            Permissao = "Usuário",
                            Senha = "maria#20"
                        });
                });

            modelBuilder.Entity("TaskManager_WebAPI.Models.UsuarioTarefa", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TarefaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioId", "TarefaId");

                    b.ToTable("UsuariosTarefas");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            TarefaId = 1
                        },
                        new
                        {
                            UsuarioId = 2,
                            TarefaId = 2
                        },
                        new
                        {
                            UsuarioId = 3,
                            TarefaId = 3
                        },
                        new
                        {
                            UsuarioId = 4,
                            TarefaId = 4
                        },
                        new
                        {
                            UsuarioId = 5,
                            TarefaId = 5
                        });
                });

            modelBuilder.Entity("TaskManager_WebAPI.Models.Tarefa", b =>
                {
                    b.HasOne("TaskManager_WebAPI.Models.Usuario", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("TaskManager_WebAPI.Models.UsuarioTarefa", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("UsuarioTarefaUsuarioId", "UsuarioTarefaTarefaId");
                });

            modelBuilder.Entity("TaskManager_WebAPI.Models.UsuarioTarefa", b =>
                {
                    b.HasOne("TaskManager_WebAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TaskManager_WebAPI.Models.Usuario", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("TaskManager_WebAPI.Models.UsuarioTarefa", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
